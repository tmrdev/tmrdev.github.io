(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./node_modules/ergo-lib-wasm-browser sync recursive":
/*!*************************************************!*\
  !*** ./node_modules/ergo-lib-wasm-browser sync ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/ergo-lib-wasm-browser sync recursive\";\n\n//# sourceURL=webpack:///./node_modules/ergo-lib-wasm-browser_sync?");

/***/ }),

/***/ "./src/ergo-related/explorer.js":
/*!**************************************!*\
  !*** ./src/ergo-related/explorer.js ***!
  \**************************************/
/*! exports provided: trueAddress, explorerApi, explorerV1Api, currentHeight, unspentBoxesFor, boxById, txById, getSpendingTx, getUnconfirmedTxsFor, getTokenBox, getBalanceFor, getBoxesForAdress, getSenderAddress */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trueAddress\", function() { return trueAddress; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"explorerApi\", function() { return explorerApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"explorerV1Api\", function() { return explorerV1Api; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"currentHeight\", function() { return currentHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unspentBoxesFor\", function() { return unspentBoxesFor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"boxById\", function() { return boxById; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"txById\", function() { return txById; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSpendingTx\", function() { return getSpendingTx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUnconfirmedTxsFor\", function() { return getUnconfirmedTxsFor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTokenBox\", function() { return getTokenBox; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBalanceFor\", function() { return getBalanceFor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBoxesForAdress\", function() { return getBoxesForAdress; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSenderAddress\", function() { return getSenderAddress; });\n/* harmony import */ var _rest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rest */ \"./src/ergo-related/rest.js\");\n\n// how is the dummy address working - can it be replaced\nconst trueAddress = '4MQyML64GnzMxZgm'; // dummy address to get unsigned tx from node, we only care about the boxes though in this case\nconst explorerApi = 'https://api.ergoplatform.com/api/v0';\nconst explorerV1Api = 'https://api.ergoplatform.com/api/v1';\n\nasync function getRequest(url) {\n    return Object(_rest__WEBPACK_IMPORTED_MODULE_0__[\"get\"])(explorerApi + url).then(res => {\n        return { data: res };\n    });\n}\n\nasync function getRequestV1(url) {\n    return Object(_rest__WEBPACK_IMPORTED_MODULE_0__[\"get\"])(explorerV1Api + url).then(res => {\n        return { data: res };\n    });\n}\n\nasync function currentHeight() {\n    return getRequest('/blocks?limit=1')\n        .then(res => res.data)\n        .then(res => res.items[0].height);\n}\n\nfunction unspentBoxesFor(address) {\n    return getRequest(`/transactions/boxes/byAddress/unspent/${address}`).then(\n        (res) => res.data\n    );\n}\n\nfunction boxById(id) {\n    return getRequest(`/transactions/boxes/${id}`).then((res) => res.data);\n}\n\nfunction txById(id) {\n    return getRequest(`/transactions/${id}`).then((res) => res.data);\n}\n\nasync function getSpendingTx(boxId) {\n    const data = getRequest(`/transactions/boxes/${boxId}`);\n    return data\n        .then((res) => res.data)\n        .then((res) => res.spentTransactionId)\n        .catch((_) => null);\n}\n\nfunction getUnconfirmedTxsFor(addr) {\n    return getRequest(\n        `/transactions/unconfirmed/byAddress/${addr}`\n    )\n        .then((res) => res.data)\n        .then((res) => res.items);\n}\n\nfunction getTokenBox(addr) {\n    return getRequest(\n        `/assets/${addr}/issuingBox`\n    )\n        .then((res) => res.data[0])\n}\n\nfunction getBalanceFor(addr, token = null) {\n    return getRequest(\n        `/addresses/${addr}`\n    )\n        .then((res) => res.data)\n        .then((res) => res.transactions)\n        .then(res => {\n            if (!token) return res.confirmedBalance;\n            let tok = res.confirmedTokensBalance.filter(tok => tok.tokenId === token);\n            if (tok.length === 0) return 0;\n            else return tok[0].amount;\n        });\n}\n\nasync function getBoxesForAdress(addr) {\n    return getRequestV1(\n        `/boxes/byAddress/${addr}`\n    ).then(res => res.data.items);\n\n}\n\nasync function getSenderAddress(txId) {\n    return getRequestV1(\n      `/transactions/${txId}`\n  ).then(res => res.data.inputs[0].address);\n}\n\n\n//# sourceURL=webpack:///./src/ergo-related/explorer.js?");

/***/ }),

/***/ "./src/ergo-related/rest.js":
/*!**********************************!*\
  !*** ./src/ergo-related/rest.js ***!
  \**********************************/
/*! exports provided: post, get */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"post\", function() { return post; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\nasync function post(url, body = {}, apiKey = '') {\n    return await fetch(url, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            api_key: apiKey,\n        },\n        body: JSON.stringify(body),\n    });\n}\nasync function get(url, apiKey = '') {\n    return await fetch(url, {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            api_key: apiKey,\n        },\n    }).then(res => res.json());\n}\n\n\n//# sourceURL=webpack:///./src/ergo-related/rest.js?");

/***/ }),

/***/ "./src/ergo-related/serializer.js":
/*!****************************************!*\
  !*** ./src/ergo-related/serializer.js ***!
  \****************************************/
/*! exports provided: encodeNum, decodeNum, encodeHex, encodeStr, decodeString, ergToNano */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeNum\", function() { return encodeNum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeNum\", function() { return decodeNum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeHex\", function() { return encodeHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeStr\", function() { return encodeStr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeString\", function() { return decodeString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ergToNano\", function() { return ergToNano; });\n/* harmony import */ var _coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @coinbarn/ergo-ts */ \"./node_modules/@coinbarn/ergo-ts/dist/index.js\");\n/* harmony import */ var _coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__);\n\n\nlet ergolib = Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! ergo-lib-wasm-browser */ \"./node_modules/ergo-lib-wasm-browser/ergo_lib_wasm.js\"))\n\nasync function encodeNum(n, isInt = false) {\n    if (isInt) return (await ergolib).Constant.from_i32(n).encode_to_base16()\n    else return (await ergolib).Constant.from_i64((await ergolib).I64.from_str(n)).encode_to_base16()\n}\n\nasync function decodeNum(n, isInt = false) {\n    if (isInt) return (await ergolib).Constant.decode_from_base16(n).to_i32()\n    else return (await ergolib).Constant.decode_from_base16(n).to_i64().to_str()\n\n}\n\nasync function encodeHex(reg) {\n    return (await ergolib).Constant.from_byte_array(Buffer.from(reg, 'hex')).encode_to_base16()\n}\n\nasync function encodeStr(str) {\n    return encodeHex(_coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__[\"Serializer\"].stringToHex(str))\n}\n\nfunction toHexString(byteArray) {\n    return Array.from(byteArray, function(byte) {\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n    }).join('')\n}\n\nasync function decodeString(encoded) {\n    return _coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__[\"Serializer\"].stringFromHex(toHexString((await ergolib).Constant.decode_from_base16(encoded).to_byte_array()))\n}\n\nfunction ergToNano(erg) {\n    if (erg === undefined) return 0\n    if (erg.startsWith('.')) return parseInt(erg.slice(1) + '0'.repeat(9 - erg.length + 1))\n    let parts = erg.split('.')\n    if (parts.length === 1) parts.push('')\n    if (parts[1].length > 9) return 0\n    return parseInt(parts[0] + parts[1] + '0'.repeat(9 - parts[1].length))\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./src/ergo-related/serializer.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: formatTokenAmount, formatLongString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatTokenAmount\", function() { return formatTokenAmount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatLongString\", function() { return formatLongString; });\n/* harmony import */ var ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ergo-lib-wasm-browser */ \"./node_modules/ergo-lib-wasm-browser/ergo_lib_wasm.js\");\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! json-bigint */ \"./node_modules/json-bigint/index.js\");\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(json_bigint__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _parseUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parseUtils */ \"./src/parseUtils.js\");\n/* harmony import */ var _ergo_related_serializer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ergo-related/serializer */ \"./src/ergo-related/serializer.js\");\n/* harmony import */ var _ergo_related_explorer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ergo-related/explorer */ \"./src/ergo-related/explorer.js\");\n/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ \"./node_modules/sweetalert2/dist/sweetalert2.all.js\");\n/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var text_decoding__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! text-decoding */ \"./node_modules/text-decoding/src/index.js\");\n\n\n\n\n\n\n\n\n\n\nconst NANOERG_TO_ERG = 1000000000;\nconst MIN_ERG_BOX_VALUE = 0.001 * NANOERG_TO_ERG;\nconst SIGUSD_TOKENID = \"03faf2cb329f2e90d6d23b58d91bbb6c046aa143261cc21f52fbe2824bfcbf04\";\n// const MIN_ERG_FEE = 0.001;\n// const MIN_FEE_SIGUSD = 0.01;\n// const FEE_PERCENT = 0.001; // 0.1%\n// setting fees to 0 for now\nconst MIN_ERG_FEE = 0;\nconst MIN_FEE_SIGUSD = 0;\nconst FEE_PERCENT = 0;\nconst PP_REF = \"Ergo Payment Portal\"; // stored in R5 register to identify the box of this dApp\nconst feeAddress = \"9hDPCYffeTEAcShngRGNMJsWddCUQLpNzAqwM9hQyx2w6qubmab\";\n\nasync function setStatus(msg, type) {\n    const status = document.getElementById(\"status\");\n    status.innerHTML = msg;\n    status.className = \"alert alert-\" + type;\n}\n\nasync function logErrorStatus(e, msg) {\n    const s = msg + `: ${JSON.stringify(e)}`;\n    console.error(s, e);\n    setStatus(s, \"danger\");\n}\n\nfunction computeFee(currency, amount) {\n    // Compute dApp fee taken paid by the seller\n    var minFee = MIN_ERG_FEE; // min Erg fee\n    if (currency == 'SIGUSD') {\n        minFee = MIN_FEE_SIGUSD; // min SIGUSD fee\n    };\n    var feeFloat = minFee;\n    if (feeFloat < amount * FEE_PERCENT) { // 0.1%\n        feeFloat = amount * FEE_PERCENT;\n    };\n    return feeFloat;\n}\n\nfunction triggerWaitAlert(msg, html) {\n    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire({\n        title: msg,\n        html: html,\n        allowOutsideClick: true,\n        showConfirmButton: false,\n        imageUrl: '../resources/Spin-1.5s-94px.svg',\n        onBeforeOpen: () => {\n            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.showLoading()\n        },\n    });\n}\n\nasync function connectErgoWallet(ergAddress, currency, amount, ref) {\n    triggerWaitAlert(\"Connection to the wallet...\");\n\n    ergo_request_read_access().then(function (access_granted) {\n        const connectWalletButton = document.getElementById(\"connect-wallet\");\n        if (!access_granted) {\n            console.log(\"ergo access refused\");\n            setStatus(\"Wallet access denied\", \"warning\")\n            connectWalletButton.onclick = connectErgoWallet;\n        } else {\n            console.log(\"ergo access given\");\n            setStatus(\"Wallet connected\", \"secondary\");\n            triggerWaitAlert(\"Retrieving \" + currency + \" balance...\");\n\n            if (currency == \"ERG\") {\n                ergo.get_balance().then(async function (result) {\n                    const walletAmount = parseFloat(parseFloat(result) / parseFloat(NANOERG_TO_ERG)).toFixed(3);\n                    connectWalletButton.innerText = \"Balance: \" + walletAmount + \" ERG\";\n                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\n                });\n            } else {\n                ergo.get_utxos(\"1000000000000\", SIGUSD_TOKENID).then(async function (result) {\n                    var amountUSD = 0;\n                    for (var i in result) {\n                        for (var j in result[i].assets) {\n                            if (result[i].assets[j].tokenId == SIGUSD_TOKENID) {\n                                amountUSD += parseInt(result[i].assets[j].amount);\n                            }\n                        }\n                    }\n                    const walletAmount = parseFloat(parseFloat(amountUSD) / parseFloat(100)).toFixed(2);\n                    connectWalletButton.innerText = \"Balance: \" + walletAmount + \" SigUSD\";\n                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\n                });\n            };\n        };\n    });\n}\n\nfunction getAmountFloat(currency, amountStr) {\n    try {\n        const amountFloat = parseFloat(amountStr);\n    } catch (e) {\n        logErrorStatus(e, \"Invalid Amount\");\n        return null;\n    };\n    const amountFloat = parseFloat(amountStr);\n    if ((amountFloat <= 0.0999 && currency == 'ERG') || (amountFloat <= 0.999 && currency == 'SIGUSD')) {\n        setStatus(\"Amount too small, mininum 0.1 ERG or 1 SIGUSD\", \"danger\");\n        return null;\n    }\n    return amountFloat;\n}\n\nfunction copyURL() {\n    /* Get the text field */\n    var copyText = document.getElementById(\"payment-url\");\n    copyText.select();\n    copyText.setSelectionRange(0, 99999); /* For mobile devices */\n    navigator.clipboard.writeText(copyText.value);\n    copyText.onclick = null;\n    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire({\n        icon: 'success',\n        title: 'Payment URL copied to clipboard',\n        timer: 1000,\n        showConfirmButton: false\n    });\n\n}\n\nasync function generatePaymentURL(event) {\n    // prevent submit\n    event.preventDefault(event);\n    const tokenForm = document.getElementById(\"token-form\");\n    // run the form validation\n    tokenForm.reportValidity();\n    if (!tokenForm.checkValidity()) {\n        console.log(\"validation error\");\n        return false;\n    };\n    var generatedURL = window.location.protocol + '//' + window.location.host;\n    for (const part of window.location.pathname.split('/')){\n        if (part !== \"\" && part !== \"/\") {\n            if (!part.includes(\".htm\")) {\n                generatedURL = generatedURL + \"/\" + part\n            }\n        }\n    }\n    generatedURL = generatedURL + \"/pay.html?\";\n    const address = document.getElementById(\"address\").value;\n    if (address.length != 51 && address.charAt(0) != '9') {\n        setStatus(\"Invalid ERG address\", \"danger\");\n        return null;\n    };\n    generatedURL += \"address=\" + address;\n    const currency = document.querySelector('input[name=\"currency\"]:checked').value;\n    generatedURL += \"&currency=\" + currency;\n    const amount = document.getElementById(\"amount\").value;\n    const amountFloat = getAmountFloat(currency, amount);\n    if (amountFloat == null || amountFloat == undefined) {\n        return null;\n    };\n    generatedURL += \"&amount=\" + amount;\n    const ref = document.getElementById(\"ref\").value;\n    if (ref != null && ref != \"\") {\n        generatedURL += \"&ref=\" + encodeURIComponent(ref);\n    }\n    var paymentURLElem = document.getElementById(\"payment-url\");\n    paymentURLElem.value = generatedURL;\n    paymentURLElem.onclick = copyURL;\n    const fee = computeFee(currency, amountFloat);\n    document.getElementById(\"fee\").value = fee.toString() + \" \" + currency;\n    var QRCode = __webpack_require__(/*! qrcode */ \"./node_modules/qrcode/lib/browser.js\")\n    var canvas = document.getElementById('canvas')\n    QRCode.toCanvas(canvas, generatedURL, function (error) {\n        if (error) console.error(error)\n        console.log('success!');\n    });\n    var res = document.getElementsByClassName(\"result\");\n    for (var i in res) {\n        res[i].removeAttribute(\"hidden\");\n    };\n\n    setStatus(\"Payment URL generated for address \" + address, \"secondary\");\n}\n\nasync function loadVoucherPage(ergAddress) {\n    const boxes = await Object(_ergo_related_explorer__WEBPACK_IMPORTED_MODULE_4__[\"getBoxesForAdress\"])(ergAddress);\n    const container = document.getElementById(\"container\");\n    const csvArea = document.getElementById(\"csvArea\");\n    const jsonArea = document.getElementById(\"jsonArea\");\n    var csv = '\"Payment reference\",\"Amount ERG\",\"Amount SigUSD\",\"Sender address\"\\n';\n    var jSonList = [];\n\n    if (boxes.length > 0) {\n        const voucherList = await extractVoucherList(boxes);\n\n        for (var i in voucherList) {\n            var html_row = \"<td><h5 class=\\\"payment-ref\\\">\" + voucherList[i][0] + \"</h5></td>\";\n            html_row += \"<td><h5 class=\\\"amount-erg\\\">\" + voucherList[i][1] + \"</h5></td>\";\n            html_row += \"<td><h5 class=\\\"amount-sigusd\\\">\" + formatTokenAmount(voucherList[i][2], 2) + \"</h5></td>\";\n            html_row += \"<td><h5 class=\\\"sender-address\\\">\" + formatLongString(voucherList[i][3], 10) + \"</h5></td>\";\n            var e = document.createElement('tr');\n            e.innerHTML = html_row;\n            container.appendChild(e);\n            csv += '\"' + voucherList[i].join('\",\"') + '\"\\n';\n            var myJson = {};\n            myJson[\"ref\"] = voucherList[i][0];\n            myJson[\"amountERG\"] = voucherList[i][1];\n            myJson[\"amountSIGUSD\"] = (parseFloat(voucherList[i][2]) / 100).toFixed(2);\n            myJson[\"senderAddress\"] = voucherList[i][3];\n            jSonList.push(myJson);\n        }\n        csvArea.value = csv;\n        jsonArea.value = JSON.stringify(jSonList, null, 2);\n    }\n}\n\nasync function extractVoucherList(boxes) {\n    var voucherList = [];\n    for (var i in boxes) {\n        if (\"R4\" in boxes[i].additionalRegisters\n            && \"R5\" in boxes[i].additionalRegisters) {\n            if (boxes[i].additionalRegisters.R4.sigmaType == 'Coll[SByte]'\n                && boxes[i].additionalRegisters.R5.sigmaType == 'Coll[SByte]') {\n                const appRef = await Object(_ergo_related_serializer__WEBPACK_IMPORTED_MODULE_3__[\"decodeString\"])(boxes[i].additionalRegisters.R5.serializedValue);\n                if (appRef == PP_REF) {\n                    const txId = boxes[i].transactionId;\n                    const senderAddress = await Object(_ergo_related_explorer__WEBPACK_IMPORTED_MODULE_4__[\"getSenderAddress\"])(txId);\n                    const paymentRef = await Object(_ergo_related_serializer__WEBPACK_IMPORTED_MODULE_3__[\"decodeString\"])(boxes[i].additionalRegisters.R4.serializedValue);\n                    const amountERG = (parseInt(boxes[i].value) / NANOERG_TO_ERG).toFixed(4);\n                    var amountSIGUSD = 0;\n                    for (var j in boxes[i].assets) {\n                        if (boxes[i].assets[j].tokenId == SIGUSD_TOKENID) {\n                            amountSIGUSD += boxes[i].assets[j].amount;\n                        }\n                    }\n                    voucherList.push([paymentRef, amountERG, amountSIGUSD, senderAddress]);\n                }\n            }\n        }\n    }\n    return voucherList;\n}\n\nfunction loadPaymentPage(ergAddress, currency, amount, ref) {\n    const addressElem = document.getElementById(\"address\");\n    addressElem.value = ergAddress;\n    const assetElem = document.getElementById(\"asset-label\");\n    assetElem.innerText = currency.toUpperCase();\n    const amountElem = document.getElementById(\"amount\");\n    amountElem.value = amount;\n    const refElem = document.getElementById(\"ref\");\n    refElem.value = ref;\n    const sendButton = document.getElementById(\"send-transaction\");\n    sendButton.onclick = sendTransaction;\n}\n\nasync function sendTransaction() {\n    triggerWaitAlert(\"Getting inputs for the transaction...\");\n    const creationHeight = await Object(_ergo_related_explorer__WEBPACK_IMPORTED_MODULE_4__[\"currentHeight\"])();\n    const address = document.getElementById(\"address\").value;\n    const currency = document.getElementById(\"asset-label\").innerText.toUpperCase();\n    const amountFloat = parseFloat(document.getElementById(\"amount\").value);\n    const ref = document.getElementById(\"ref\").value;\n    const changeAddress = await ergo.get_change_address();\n\n    const feeFloat = computeFee(currency, amountFloat);\n    //console.log(\"inputs:\", address, currency, amountFloat, ref, feeFloat);\n\n    // Prepare total ergs and/or SIGUSD to send\n    var globalNanoErgsToSendInt = BigInt(Math.round(amountFloat * NANOERG_TO_ERG));\n    var tokens = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Tokens\"]();\n    if (currency == 'SIGUSD') {\n        if (feeFloat > 0) {\n            globalNanoErgsToSendInt = BigInt(2 * MIN_ERG_BOX_VALUE);\n        } else {\n            globalNanoErgsToSendInt = BigInt(MIN_ERG_BOX_VALUE);\n        };\n        tokens.add(new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Token\"](\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenId\"].from_str(SIGUSD_TOKENID),\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenAmount\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(Math.round((amountFloat * 100)).toString()))\n        ));\n    };\n\n    // Get the input boxes from the connected wallet\n    const utxos = await getAllUtxos();\n    const selector = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"SimpleBoxSelector\"]();\n    const globalNanoErgsToSend = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(globalNanoErgsToSendInt.toString()));\n    let boxSelection = {};\n    try {\n        boxSelection = selector.select(\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxes\"].from_boxes_json(utxos),\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(globalNanoErgsToSend.as_i64().checked_add(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].SUGGESTED_TX_FEE().as_i64())),\n            tokens);\n    } catch (e) {\n        let msg = \"[Wallet] Error: \"\n        if (JSON.stringify(e).includes(\"BoxValue out of bounds\")) {\n            msg = msg + \"Increase the Erg amount to process the transaction. \"\n        }\n        logErrorStatus(e, msg);\n        sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\n        return null;\n    }\n    //console.log('boxSelection: ', boxSelection.boxes().len());\n\n    // Prepare the output boxes\n    const outputCandidates = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidates\"].empty();\n\n    // Build the seller output box\n    var ergsStr = Math.round((amountFloat - feeFloat) * NANOERG_TO_ERG).toString();\n    var ergsAmountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(ergsStr));\n    var sellerTokenAmount = 0;\n    if (currency == 'SIGUSD') {\n        ergsAmountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(MIN_ERG_BOX_VALUE.toString()));\n    };\n    //console.log('ergsStr', ergsStr);\n    const sellerBoxBuilder = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidateBuilder\"](\n        ergsAmountBoxValue,\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Contract\"].pay_to_address(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(address)),\n        creationHeight);\n    if (currency == 'SIGUSD') {\n        sellerTokenAmount = Math.round((amountFloat - feeFloat) * 100);\n        sellerBoxBuilder.add_token(\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenId\"].from_str(\"03faf2cb329f2e90d6d23b58d91bbb6c046aa143261cc21f52fbe2824bfcbf04\"),\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenAmount\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(BigInt(sellerTokenAmount).toString())\n            ));\n    }\n    // Add the registers\n    // R4 provided in input by the seller to identify the transaction from the generated link\n    // R5 as a reference of the payment portal\n    const byteArray = new text_decoding__WEBPACK_IMPORTED_MODULE_6__[\"TextEncoder\"]().encode(ref);\n    const encodedRef = new Uint8Array(byteArray.buffer);\n    sellerBoxBuilder.set_register_value(4, ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Constant\"].from_byte_array(encodedRef));\n    const ppRegister = new text_decoding__WEBPACK_IMPORTED_MODULE_6__[\"TextEncoder\"]().encode(PP_REF);\n    const encodedPpRegister = new Uint8Array(ppRegister.buffer);\n    sellerBoxBuilder.set_register_value(5, ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Constant\"].from_byte_array(encodedPpRegister));\n    //console.log('R4:', new TextDecoder().decode(sellerBoxBuilder.register_value(4).to_byte_array()));\n    //console.log('R5:', new TextDecoder().decode(sellerBoxBuilder.register_value(5).to_byte_array()));\n    try {\n        outputCandidates.add(sellerBoxBuilder.build());\n    } catch (e) {\n        console.log(`building error: ${e}`);\n        sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\n        throw e;\n    }\n\n    // Build the fee output box\n    if (feeFloat > 0) {\n        const feeStrNano = Math.round((feeFloat * NANOERG_TO_ERG)).toString();\n        var feeAmountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(feeStrNano));\n        if (currency == 'SIGUSD') {\n            feeAmountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(MIN_ERG_BOX_VALUE.toString()));\n        };\n        const feeBoxBuilder = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidateBuilder\"](\n            feeAmountBoxValue,\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Contract\"].pay_to_address(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(feeAddress)),\n            creationHeight);\n        if (currency == 'SIGUSD') {\n            const feeNanoErgToSend = Math.round((feeFloat) * 100);\n            feeBoxBuilder.add_token(\n                ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenId\"].from_str(\"03faf2cb329f2e90d6d23b58d91bbb6c046aa143261cc21f52fbe2824bfcbf04\"),\n                ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenAmount\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(feeNanoErgToSend.toString())\n                ));\n        }\n        try {\n            outputCandidates.add(feeBoxBuilder.build());\n        } catch (e) {\n            console.log(`building error: ${e}`);\n            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\n            throw e;\n        }\n    }\n\n    // Create the transaction \n    const txBuilder = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].new(\n        boxSelection,\n        outputCandidates,\n        creationHeight,\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].SUGGESTED_TX_FEE(),\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(changeAddress),\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].SAFE_USER_MIN());\n    const dataInputs = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"DataInputs\"]();\n    txBuilder.set_data_inputs(dataInputs);\n    const tx = Object(_parseUtils__WEBPACK_IMPORTED_MODULE_2__[\"parseUnsignedTx\"])(txBuilder.build().to_json());\n    //console.log(`tx: ${JSONBigInt.stringify(tx)}`);\n\n    const correctTx = Object(_parseUtils__WEBPACK_IMPORTED_MODULE_2__[\"parseUnsignedTx\"])(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"UnsignedTransaction\"].from_json(json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(tx)).to_json());\n    // Put back complete selected inputs in the same order\n    correctTx.inputs = correctTx.inputs.map(box => {\n        //console.log(`box: ${JSONBigInt.stringify(box)}`);\n        const fullBoxInfo = utxos.find(utxo => utxo.boxId === box.boxId);\n        return {\n            ...fullBoxInfo,\n            extension: {}\n        };\n    });\n    //console.log(`correctTx: ${JSONBigInt.stringify(correctTx)}`);\n\n    // Send transaction for signing\n    setStatus(\"Awaiting transaction signing\", \"secondary\");\n\n    triggerWaitAlert('Awaiting transaction signing', 'Please review the transaction shown in the wallet and sign it to process the payment.<br/>The transactions on blockchain cannot be reverted nor cancelled.');\n\n    processTx(correctTx).then(txId => {\n        sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\n        console.log('[txId]', txId);\n        if (txId) {\n            displayTxId(txId);\n            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire({\n                title: 'Transaction successfully sent, waiting for it reaches the explorer',\n                icon: 'success',\n                timer: 10000,\n                timerProgressBar: true\n            });\n        }\n    });\n    return false;\n\n}\n\nasync function getAllUtxos() {\n    const filteredUtxos = [];\n    const utxos = await ergo.get_utxos();\n    for (const utxo of utxos) {\n        try {\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBox\"].from_json(json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(utxo));\n            filteredUtxos.push(utxo);\n        } catch (e) {\n            logErrorStatus(e, \"[getAllUtxos] UTxO failed parsing:\");\n            return null;\n        }\n    }\n    return filteredUtxos;\n}\n\nasync function signTx(txToBeSigned) {\n    try {\n        return await ergo.sign_tx(txToBeSigned);\n    } catch (e) {\n        logErrorStatus(e, \"[signTx] Error\");\n        return null;\n    }\n}\n\nasync function submitTx(txToBeSubmitted) {\n    try {\n        return await ergo.submit_tx(txToBeSubmitted);\n    } catch (e) {\n        logErrorStatus(e, \"[submitTx] Error\");\n        return null;\n    }\n}\n\nasync function processTx(txToBeProcessed) {\n    const msg = s => {\n        console.log('[processTx]', s);\n        setStatus(s, \"secondary\");\n    };\n    const signedTx = await signTx(txToBeProcessed);\n    if (!signedTx) {\n        console.error(`No signed transaction found`);\n        return null;\n    }\n    msg(\"Transaction signed - awaiting submission\");\n    const txId = await submitTx(signedTx);\n    if (!txId) {\n        console.log(`No submitted tx ID`);\n        return null;\n    }\n    msg(\"Transaction submitted \");\n    return txId;\n}\n\nfunction displayTxId(txId) {\n    const status = document.getElementById(\"status\");\n    const cr = document.createElement(\"br\");\n    const txTracker = document.createElement(\"a\");\n    txTracker.appendChild(document.createTextNode(`View transaction in explorer: ${txId}`));\n    txTracker.href = `https://explorer.ergoplatform.com/en/transactions/${txId}`;\n    txTracker.target = \"_blank\"\n    status.appendChild(cr);\n    status.appendChild(txTracker);\n    status.className = \"alert alert-secondary\";\n}\n\n// return formatted token amount like 6,222,444.420\n// amountInt: number of token as provided in utxo (to be divided by 10^decimals)\n// decimalsInt: number of decimals of te token\nfunction formatTokenAmount(amountInt, decimalsInt) {\n    if (decimalsInt > 0) {\n        const numberAmount = (Number(amountInt) / Number(Math.pow(10, parseInt(decimalsInt)))).toFixed(parseInt(decimalsInt));\n        var str = numberAmount.toString().split(\".\");\n        str[0] = str[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return str.join(\".\");\n    } else {\n        return amountInt.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");;\n    }\n}\n\nfunction formatLongString(str, num) {\n    if (str.length > 2 * num) {\n        return str.substring(0, num) + \"...\" + str.substring(str.length - num, str.length);\n    } else {\n        return str;\n    }\n}\n\n// INIT page\nconst currentLocation = window.location;\nif (currentLocation.toString().includes(\"pay.html\")) {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    var parameterValid = true;\n    // ERG address\n    const address = urlParams.get('address');\n    if (address != null && address.length != 51 && address.charAt(0) != '9') {\n        setStatus(\"Invalid ERG address\", \"danger\");\n        parameterValid = false;\n    };\n    // Currency\n    const currency = urlParams.get('currency').toUpperCase();\n    if (currency != 'ERG' && currency != 'SIGUSD') {\n        setStatus(\"Invalid currency parameter '\" + currency + \"': Only ERG or SIGUSD are accepted\", \"danger\");\n        parameterValid = false;\n    };\n    // Amount\n    const amount = urlParams.get('amount');\n    const amountFloat = getAmountFloat(currency, amount);\n    console.log(\"amountFloat\", amountFloat);\n    if (amountFloat == null || isNaN(amountFloat)) {\n        setStatus(\"Invalid amount parameter: \" + amount, \"danger\");\n        parameterValid = false;\n    };\n    // Reference, optional\n    const ref = urlParams.get('ref');\n    if (parameterValid) {\n        loadPaymentPage(address, currency, amount, ref);\n        if (typeof ergo_request_read_access === \"undefined\") {\n            var msg = \"dApp connector not found, to use an ergo wallet extension \";\n            msg += '<a href=\"https://github.com/ThierryM1212/SAFEW/releases\" target=\"_blank\">SAFEW</a>.';\n            setStatus(msg, \"warning\");\n            const sendButton = document.getElementById(\"send-transaction\");\n            sendButton.disabled = true;\n        } else {\n            console.log(\"Yorio ergo dApp found\");\n            window.addEventListener(\"ergo_wallet_disconnected\", function (event) {\n                const connectWalletButton = document.getElementById(\"connect-wallet\");\n                connectWalletButton.value = \"Connect wallet\";\n                connectWalletButton.onclick = connectErgoWallet;\n                setStatus(\"Ergo wallet disconnected\", \"warning\");\n                const container = document.getElementById(\"main\");\n                container.addAttribute(\"hidden\");\n            });\n            connectErgoWallet(address, currency, amount, ref);\n        }\n    }\n} else if (currentLocation.toString().includes(\"voucher.html\")) {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const ergAddress = urlParams.get('address');\n    if (ergAddress == null) {\n        setStatus(\"Provide the ERG address to monitor\", \"secondary\");\n    } else {\n        if (ergAddress.length != 51 || ergAddress.charAt(0) != '9') {\n            setStatus(\"Invalid ERG address\", \"danger\");\n        } else {\n            setStatus(\"List of the received payments from \" + PP_REF + \" for address <b>\" + ergAddress + \"</b>\", \"secondary\");\n            document.getElementById(\"result\").removeAttribute(\"hidden\");\n            loadVoucherPage(ergAddress);\n        }\n    }\n}\nelse { // generate URL page\n    const generateButton = document.getElementById(\"generate-url\");\n    generateButton.onclick = generatePaymentURL;\n    setStatus(\"Provide the inputs for the payment request URL\", \"secondary\");\n};\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/parseUtils.js":
/*!***************************!*\
  !*** ./src/parseUtils.js ***!
  \***************************/
/*! exports provided: parseUnsignedTx, parseUtxo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseUnsignedTx\", function() { return parseUnsignedTx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseUtxo\", function() { return parseUtxo; });\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! json-bigint */ \"./node_modules/json-bigint/index.js\");\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(json_bigint__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\nfunction parseUnsignedTx(str) {\n    let json = json_bigint__WEBPACK_IMPORTED_MODULE_0___default.a.parse(str);\n    return {\n        id: json.id,\n        inputs: json.inputs,\n        dataInputs: json.dataInputs,\n        outputs: json.outputs.map(output => (parseUtxo(output))),\n    };\n}\nfunction parseUtxo(json) {\n    return {\n        boxId: json.boxId,\n        value: json.value.toString(),\n        ergoTree: json.ergoTree,\n        assets: json.assets.map(asset => ({\n            tokenId: asset.tokenId,\n            amount: asset.amount.toString(),\n        })),\n        additionalRegisters: json.additionalRegisters,\n        creationHeight: json.creationHeight,\n        transactionId: json.transactionId,\n        index: json.index\n    };\n}\n\n\n//# sourceURL=webpack:///./src/parseUtils.js?");

/***/ }),

/***/ 0:
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///buffer_(ignored)?");

/***/ }),

/***/ 1:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///crypto_(ignored)?");

/***/ }),

/***/ 2:
/*!********************************!*\
  !*** ./util.inspect (ignored) ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///./util.inspect_(ignored)?");

/***/ }),

/***/ 3:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///crypto_(ignored)?");

/***/ })

}]);